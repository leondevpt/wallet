// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/leondevpt/wallet/trxservice/internal/biz"
	"github.com/leondevpt/wallet/trxservice/internal/data"
	"github.com/leondevpt/wallet/trxservice/internal/server"
	"github.com/leondevpt/wallet/trxservice/internal/service"
	"github.com/leondevpt/wallet/trxservice/pkg/setting"
	"go.uber.org/zap"
)

import (
	_ "net/http/pprof"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(cfg *setting.Config, logger *zap.Logger) (app, error) {
	db := data.NewDB(cfg)
	client := data.NewRedis(cfg)
	dataData, err := data.NewData(db, client)
	if err != nil {
		return app{}, err
	}
	trxRepo := data.NewTrxRepo(dataData, logger)
	tronCli := biz.NewTronCli()
	trxUsecase := biz.NewTrxUsecase(trxRepo, logger, tronCli)
	trxServiceServer := service.NewTrxService(trxUsecase, logger)
	grpcServer, err := server.NewGrpcServer(trxServiceServer, cfg, logger)
	if err != nil {
		return app{}, err
	}
	mainApp, err := newApp(grpcServer)
	if err != nil {
		return app{}, err
	}
	return mainApp, nil
}
